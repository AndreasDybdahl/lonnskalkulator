{"version":3,"sources":["components/header/Header.tsx","components/label/Label.tsx","components/input/Input.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","title","className","Label","children","htmlFor","classNames","Input","inputId","label","placeholder","name","type","rest","id","formatNumber","n","toLocaleString","App","useState","timepris","setTimepris","estimerteTimer","setEstimerteTimer","feriepengerProsent","setFeriepengerProsent","andel","setAndel","skatt","setSkatt","bruttoInntektTotal","timeprisNumber","parseInt","estimerteTimerNumber","andelNumber","Math","round","beregnInntekt","feriepenger","bruttoUtenFeriepenger","nettoInntekt","value","onChange","event","target","style","color","paddingBottom","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d0b1f8a.chunk.js","sourcesContent":["import { FunctionComponent } from 'react';\r\nimport './Header.css';\r\n\r\ninterface HeaderProps {\r\n    title: string;\r\n}\r\n\r\nconst Header: FunctionComponent<HeaderProps> = ({ title }) => {\r\n    return <h1 className=\"header\">{title}</h1>;\r\n};\r\n\r\nexport default Header;\r\n","import classNames from 'classnames';\r\nimport { FunctionComponent, HTMLAttributes } from 'react';\r\n\r\nimport './Label.css';\r\n\r\nexport interface LabelProps extends HTMLAttributes<HTMLLabelElement> {\r\n    children: React.ReactNode | React.ReactNode[];\r\n    className?: string;\r\n    htmlFor: string;\r\n}\r\n\r\nconst Label: FunctionComponent<LabelProps> = ({ children, htmlFor, className }) => {\r\n    return (\r\n        <label className={classNames('label', className)} htmlFor={htmlFor}>\r\n            {children}\r\n        </label>\r\n    );\r\n};\r\n\r\nexport default Label;\r\n","import classNames from 'classnames';\r\nimport { FunctionComponent } from 'react';\r\nimport Label from '../label/Label';\r\nimport './Input.css';\r\n\r\ninterface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {\r\n    inputId: string;\r\n    label: string;\r\n    placeholder: string;\r\n    type?: 'number' | 'text';\r\n    className?: string;\r\n    name?: string;\r\n}\r\n\r\nconst Input: FunctionComponent<InputProps> = ({\r\n    inputId,\r\n    label,\r\n    placeholder,\r\n    name,\r\n    type = 'text',\r\n    className,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <div className=\"inputContainer\">\r\n            <Label htmlFor={inputId}>{label}</Label>\r\n            <input\r\n                className={classNames('input', className)}\r\n                type={type}\r\n                id={inputId}\r\n                name={name}\r\n                placeholder={placeholder}\r\n                {...rest}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Input;\r\n","import Header from './components/header/Header';\nimport Input from './components/input/Input';\nimport { useState } from 'react';\nimport './App.css';\n\nconst beregnInntekt = (timepris: string, andel: string, estimerteTimer: string): number => {\n    const timeprisNumber = parseInt(timepris, 10);\n    const estimerteTimerNumber = parseInt(estimerteTimer, 10);\n    const andelNumber = parseInt(andel) / 100;\n    const bruttoInntekt = Math.round(timeprisNumber * estimerteTimerNumber * andelNumber);\n\n    return bruttoInntekt;\n};\n\nconst formatNumber = (n: number): string => {\n    return n.toLocaleString();\n};\n\nconst App = () => {\n    const [timepris, setTimepris] = useState('1500');\n    const [estimerteTimer, setEstimerteTimer] = useState('1700');\n    const [feriepengerProsent, setFeriepengerProsent] = useState('12');\n    const [andel, setAndel] = useState('60');\n    const [skatt, setSkatt] = useState('38');\n\n    const bruttoInntektTotal = beregnInntekt(timepris, andel, estimerteTimer);\n    const feriepenger = Math.round((bruttoInntektTotal * parseInt(feriepengerProsent)) / 100);\n    const bruttoUtenFeriepenger = bruttoInntektTotal - feriepenger;\n\n    const nettoInntekt = Math.round(bruttoUtenFeriepenger * (1 - parseInt(skatt) / 100));\n\n    return (\n        <div className=\"App\">\n            <Header title=\"Lønnskalkulator\" />\n            <Input\n                inputId=\"timepris\"\n                label=\"Timepris\"\n                placeholder=\"Timepris\"\n                type=\"number\"\n                value={timepris}\n                onChange={(event) => setTimepris(event.target.value)}\n            />\n            <Input\n                inputId=\"estimerte-timer\"\n                label=\"Estimerte timer\"\n                placeholder=\"Estimerte timer\"\n                type=\"number\"\n                value={estimerteTimer}\n                onChange={(event) => setEstimerteTimer(event.target.value)}\n            />\n            <Input\n                inputId=\"feriepenger\"\n                label=\"Feriepengetrekk\"\n                placeholder=\"Feriepengetrekk\"\n                type=\"number\"\n                value={feriepengerProsent}\n                onChange={(event) => setFeriepengerProsent(event.target.value)}\n            />\n            <Input\n                inputId=\"andel\"\n                label=\"Din andel i prosent\"\n                placeholder=\"Din andel i prosent\"\n                type=\"number\"\n                value={andel}\n                onChange={(event) => setAndel(event.target.value)}\n            />\n            <Input\n                inputId=\"skatt\"\n                label=\"Din skatt i prosent\"\n                placeholder=\"Din skatt i prosent\"\n                type=\"number\"\n                value={skatt}\n                onChange={(event) => setSkatt(event.target.value)}\n            />\n            <div>\n                <div style={{ color: 'white', paddingBottom: '1rem', fontSize: '18px' }}>\n                    Din beregnede årslønn inklusive feriepenger (brutto): {formatNumber(bruttoInntektTotal)}\n                </div>\n                <div style={{ color: 'white', paddingBottom: '1rem', fontSize: '18px' }}>\n                    Hvorav feriepenger: {formatNumber(feriepenger)}\n                </div>\n                <div style={{ color: 'white', paddingBottom: '1rem', fontSize: '18px' }}>\n                    Din beregnede årslønn ekslusive feriepenger (brutto): {formatNumber(bruttoUtenFeriepenger)}\n                </div>\n                <div style={{ color: 'white', paddingBottom: '1rem', fontSize: '18px' }}>\n                    Din beregnede månedslønn (brutto): {formatNumber(Math.round(bruttoUtenFeriepenger / 12))}\n                </div>\n                <div style={{ color: 'white', paddingBottom: '1rem', fontSize: '18px' }}>\n                    Din beregnede årslønn (netto): {formatNumber(nettoInntekt)}\n                </div>\n                <div style={{ color: 'white', paddingBottom: '1rem', fontSize: '18px' }}>\n                    Din beregnede månedslønn (netto): {formatNumber(Math.round(nettoInntekt / 12))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}